#version 450

layout(binding = 0) uniform UniformBufferObject {
    int width;
    int height;
}
ubo;

layout(std430, binding = 1) buffer src_in { float src[]; };

layout(std430, binding = 2) buffer dst_in { float dst[]; };

layout(std430, binding = 3) readonly buffer kernel_in {float kernel[9]; };

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void main() {
    ivec2 gid = ivec2(gl_GlobalInvocationID.xy);
    const int row = gid.y;
    const int col = gid.x;
    if (row >= ubo.height || col >= ubo.width) return;

    const int orig_idx = row * ubo.width + col;
    if (row == 0 || row == ubo.height - 1 || col == 0 || col == ubo.width - 1) {
        dst[orig_idx] = src[orig_idx];
        return;
    }

    const int r = 1;
    float sum = 0.0f;

    int idx = 0;
    for (int i = -r; i <= r; ++i) {
        for (int j = -r; j <= r; ++j) {
            const int new_idx = (row + i) * ubo.width + (col + j);
            sum += src[new_idx] * kernel[idx];
            ++idx;
        }
    }
    dst[row * ubo.width + col] = sum;
}